<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="voc">
	<resultMap id="CustVoiceVO" type="kr.co.realty.data.voc.vo.CustVoiceVO">
		<result property = "custVoiceSeq"	column="CUST_VOICE_SEQ"/>
		<result property = "bldInfoSeq"		column="BLD_INFO_SEQ"/>
		<result property = "custTitle"			column="CUST_TITLE"/>
		<result property = "custCate"			column="CUST_CATE"/>
		<result property = "custField"			column="CUST_FIELD"/>
		<result property = "custName"		column="CUST_NAME"/>
		<result property = "custPhone"		column="CUST_PHONE"/>
		<result property = "custEmail"		column="CUST_EMAIL"/>
		<result property = "contents"			column="CONTENTS"/>
		<result property = "custPW"			column="CUST_PW"/>
		<result property = "regDate"			column="REG_DATE"/>
		<result property = "isQR"				column="IS_QR"/>
		<result property = "isReply"			column="IS_REPLY"/>
		<result property = "isTolk"				column="IS_TOLK"/>
		<result property = "isUse"				column="IS_USE"/>
		<result property = "hitCount"			column="HIT_COUNT"/>
		<result property = "bldName"			column="BLD_NAME"/>
		<result property = "bldZone"			column="BLD_ZONE" />
		<result property = "bldDivision"		column="BLD_DIVISION" />
		<result property = "custFieldname"	column="CUST_FIELD_NAME"/>
		<result property = "custCateName"	column="CUST_CATE_NAME"/>
		<result property = "cnt"				column="CNT"/>
	</resultMap>	
	
	<resultMap id="CustVoiceReplyVO" type="kr.co.realty.data.voc.vo.CustVoiceReplyVO">
		<result property = "custVoiceReplySeq"	column="CUST_VOICE_REPLY_SEQ"/>
		<result property = "custVoiceSeq"			column="CUST_VOICE_SEQ"/>
		<result property = "admID"					column="ADM_ID"/>
		<result property = "replyType"				column="REPLY_TYPE"/>
		<result property = "replyContents"			column="REPLY_CONTENTS"/>
		<result property = "regDate"					column="REG_DATE"/>
		<result property = "admName"               column="ADM_NAME" />
		<result property = "departmentName"     column="DEPARTMENT_NAME" />
	</resultMap>
	
	<resultMap id="CustVoiceFileVO" type="kr.co.realty.data.voc.vo.CustVoiceFileVO">
		<result property = "custVoiceFileSeq"	column="CUST_VOICE_FILE_SEQ"/>
		<result property = "custVoiceType"		column="CUST_VOICE_TYPE"/>
		<result property = "custVoiceSeq"		column="CUST_VOICE_SEQ"/>
		<result property = "fileType"				column="FILE_TYPE"/>
		<result property = "fileOrgnm"			column="FILE_ORGNM"/>
		<result property = "fileSavenm"			column="FILE_SAVENM"/>
		<result property = "filePath"				column="FILE_PATH"/>
		<result property = "fileSize"				column="FILE_SIZE"/>
		<result property = "fileFormName"		column="FILE_FORM_NAME"/>
	</resultMap>	
	
	 <insert id="insertForCustVoice" parameterType="CustVoiceVO" useGeneratedKeys="true" keyProperty="CUST_VOICE_SEQ">
     	<selectKey keyProperty="custVoiceSeq" resultType="int" order="BEFORE">			
			SELECT NEXTVAL FOR HPCDTA.CUST_VOICE_T_SEQ FROM SYSIBM.SYSDUMMY1
		</selectKey> 
          INSERT INTO 
          	HPCDTA.CUST_VOICE ( 
			CUST_VOICE_SEQ
			,BLD_INFO_SEQ
			,CUST_TITLE
			,CUST_CATE
			,CUST_FIELD
			,CUST_NAME
			,CUST_PHONE
			,CUST_EMAIL
			,CONTENTS
			,CUST_PW
			,REG_DATE
			,IS_QR
			,HIT_COUNT
			,IS_REPLY
			,IS_TOLK
			,IS_USE			
          ) VALUES ( 
                #{custVoiceSeq,jdbcType=INTEGER}
                ,#{bldInfoSeq,jdbcType=INTEGER}				
				,#{custTitle,jdbcType=VARCHAR}
				,#{custCate,jdbcType=VARCHAR}
				,#{custField,jdbcType=VARCHAR}
				,#{custName,jdbcType=VARCHAR}
				,DAMO.SCPENCB64('SCPKHPNO', CAST(#{custPhone,jdbcType=VARCHAR} AS VARCHAR(50)))
				,DAMO.SCPENCB64('SCPKMAIL', CAST(#{custEmail,jdbcType=VARCHAR}  AS VARCHAR(50)))
				,#{contents,jdbcType=VARCHAR}
				,#{custPW,jdbcType=VARCHAR}
				,CURRENT TIMESTAMP
				,#{isQR,jdbcType=VARCHAR}
				,0
				,'N'
				,'N'
				,'N'
          ) 
    </insert>
    
   	<insert id="insertForCustVoiceFile" parameterType="CustVoiceFileVO" >
         INSERT INTO 
         	HPCDTA.CUST_VOICE_FILE (
				CUST_VOICE_FILE_SEQ
				,CUST_VOICE_TYPE
				,CUST_VOICE_SEQ
				,FILE_TYPE
				,FILE_ORGNM
				,FILE_SAVENM
				,FILE_PATH
				,FILE_SIZE
				,FILE_FORM_NAME
         ) VALUES (               
               NEXTVAL FOR HPCDTA.CUST_VOICE_FILE_T_SEQ
            ,#{custVoiceType,jdbcType=VARCHAR}
			,#{custVoiceSeq,jdbcType=INTEGER}
			,#{fileType,jdbcType=VARCHAR}								
			,#{fileOrgnm,jdbcType=VARCHAR}
			,#{fileSavenm,jdbcType=VARCHAR}
			,#{filePath,jdbcType=VARCHAR}
			,#{fileSize,jdbcType=VARCHAR}
			,#{fileFormName,jdbcType=VARCHAR}
         ) 
    </insert> 
    
	<select id="selectListForCustVoiceAlert" resultMap="CustVoiceVO">
    	SELECT
			BLD_INFO_SEQ
			, COUNT(BLD_INFO_SEQ) AS CNT		
			, XMLSERIALIZE(XMLAGG(XMLELEMENT(NAME "p", TO_CHAR(REG_DATE,'YYYY-MM-DD')||' : '||CUST_TITLE) ) AS VARCHAR(1000)) AS CUST_TITLE   
		FROM HPCDTA.CUST_VOICE
			WHERE IS_ALERT IS NULL 
			AND REG_DATE <![CDATA[<]]> CURRENT TIMESTAMP-1 DAY
			GROUP BY BLD_INFO_SEQ	
			ORDER BY BLD_INFO_SEQ
	</select>

	<select id="selectCountListForCustVoiceList"  parameterType="SearchVO" resultType="integer">	
		SELECT
			COUNT(t1.CUST_VOICE_SEQ)			
		FROM HPCDTA.CUST_VOICE t1
		LEFT OUTER JOIN HPCDTA.BLD_INFO t2 ON t1.BLD_INFO_SEQ = t2.BLD_INFO_SEQ
		LEFT OUTER JOIN HPCDTA.BLD_MANAGER t3 ON t1.BLD_INFO_SEQ = t3.BLD_INFO_SEQ
		WHERE 1=1
		<if test=" isUse != null and isUse != '' ">
			AND t1.IS_USE=#{isUse}
		</if>		
		<if test="arrCustCate != null and arrCustCate != '' ">
			AND t1.CUST_CATE IN
	        <foreach collection="arrCustCate" item="type"  open="(" close=")" separator=",">
	            #{type}
	        </foreach>
		</if>
		
		<if test="arrCustField != null and arrCustField != '' ">
			AND t1.CUST_FIELD IN
	        <foreach collection="arrCustField" item="type"  open="(" close=")" separator=",">
	            #{type}
	        </foreach>
		</if>
		
		<if test="searchText != null and searchText != ''">
			<if test="searchType == 's_title'">
				AND (CUST_TITLE LIKE '%'||TRIM(CAST ((#{searchText}) AS VARCHAR(100) CCSID 1208))||'%')
			</if>
			<if test="searchType == 's_name'">
				AND (CUST_NAME LIKE '%'||TRIM(CAST ((#{searchText}) AS VARCHAR(100) CCSID 1208))||'%')
			</if>	
			<if test="searchType == 's_contents'">
				AND (CONTENTS LIKE '%'||TRIM(CAST ((#{searchText}) AS VARCHAR(100) CCSID 1208))||'%')
			</if>			
		</if>
		<if test="searchFromDate != null and searchFromDate != ''">
			AND CAST(t1.REG_DATE AS DATE) <![CDATA[>=]]> CAST(#{searchFromDate} AS DATE)
		</if>
		<if test="searchToDate != null and searchToDate != ''">
			AND CAST(t1.REG_DATE AS DATE) <![CDATA[<=]]> CAST(#{searchToDate} AS DATE)
		</if>		
		<if test=" bldZone != null and bldZone != '' ">
			AND t2.BLD_ZONE = #{bldZone,jdbcType=INTEGER}
		</if>
		<if test=" bldDivision != null and bldDivision != '' ">
			AND t2.BLD_DIVISION = #{bldDivision,jdbcType=INTEGER}
		</if>
		<if test=" bldInfoSeq != null and bldInfoSeq != '' ">
			AND t2.BLD_INFO_SEQ = #{bldInfoSeq,jdbcType=INTEGER}
		</if>
		<if test=" admID != null and admID != '' ">			
			AND ((T3.PMER = #{admID,jdbcType=VARCHAR}) OR (T3.CS_MANAGER = #{admID,jdbcType=VARCHAR}) OR (T3.PLACE_MANAGER = #{admID,jdbcType=VARCHAR}))
		</if>
	</select>
	
	
	<select id="selectListForCustVoice"  parameterType="SearchVO" resultMap="CustVoiceVO">
	SELECT * FROM (	
		SELECT
			t1.CUST_VOICE_SEQ
			,t1.BLD_INFO_SEQ
			,t1.CUST_TITLE
			,t1.CUST_CATE
			,t1.CUST_FIELD
			,t1.CUST_NAME
			,DAMO.SCPDECB64('SCPKHPNO', t1.CUST_PHONE) AS CUST_PHONE
			,DAMO.SCPDECB64('SCPKMAIL', t1.CUST_EMAIL) AS CUST_EMAIL
			,t1.CONTENTS
			,t1.CUST_PW
			,t1.REG_DATE
			,t1.IS_QR
			,t1.HIT_COUNT
			,t1.IS_REPLY
			,t1.IS_TOLK
			,t1.IS_USE
			,t2.BLD_NAME
			,ROW_NUMBER() OVER( ORDER BY t1.REG_DATE DESC, t1.CUST_VOICE_SEQ DESC) AS RNUM
		FROM HPCDTA.CUST_VOICE t1
		LEFT OUTER JOIN HPCDTA.BLD_INFO t2 ON t1.BLD_INFO_SEQ = t2.BLD_INFO_SEQ
		LEFT OUTER JOIN HPCDTA.BLD_MANAGER t3 ON t1.BLD_INFO_SEQ = t3.BLD_INFO_SEQ
		WHERE 1=1
		<if test=" isUse != null and isUse != '' ">
			AND t1.IS_USE=#{isUse}
		</if>		
		<if test="arrCustCate != null and arrCustCate != '' ">
			AND t1.CUST_CATE IN
	        <foreach collection="arrCustCate" item="type"  open="(" close=")" separator=",">
	            #{type}
	        </foreach>
		</if>
		
		<if test="arrCustField != null and arrCustField != '' ">
			AND t1.CUST_FIELD IN
	        <foreach collection="arrCustField" item="type"  open="(" close=")" separator=",">
	            #{type}
	        </foreach>
		</if>
		
		<if test="searchText != null and searchText != ''">
			<if test="searchType == 's_title'">
				AND (CUST_TITLE LIKE '%'||TRIM(CAST ((#{searchText}) AS VARCHAR(100) CCSID 1208))||'%')
			</if>
			<if test="searchType == 's_name'">
				AND (CUST_NAME LIKE '%'||TRIM(CAST ((#{searchText}) AS VARCHAR(100) CCSID 1208))||'%')
			</if>	
			<if test="searchType == 's_contents'">
				AND (CONTENTS LIKE '%'||TRIM(CAST ((#{searchText}) AS VARCHAR(100) CCSID 1208))||'%')
			</if>			
		</if>
		<if test="searchFromDate != null and searchFromDate != ''">
			AND CAST(t1.REG_DATE AS DATE) <![CDATA[>=]]> CAST(#{searchFromDate} AS TIMESTAMP)
		</if>
		<if test="searchToDate != null and searchToDate != ''">
			AND CAST(t1.REG_DATE AS DATE) <![CDATA[<=]]> CAST(#{searchToDate} AS TIMESTAMP)
		</if>		
		<if test=" bldZone != null and bldZone != '' ">
			AND t2.BLD_ZONE = #{bldZone,jdbcType=INTEGER}
		</if>
		<if test=" bldDivision != null and bldDivision != '' ">
			AND t2.BLD_DIVISION = #{bldDivision,jdbcType=INTEGER}
		</if>
		<if test=" bldInfoSeq != null and bldInfoSeq != '' ">
			AND t2.BLD_INFO_SEQ = #{bldInfoSeq,jdbcType=INTEGER}
		</if>
		<if test=" admID != null and admID != '' ">			
			AND ((T3.PMER = #{admID,jdbcType=VARCHAR}) OR (T3.CS_MANAGER = #{admID,jdbcType=VARCHAR}) OR (T3.PLACE_MANAGER = #{admID,jdbcType=VARCHAR}))
		</if>
		)T WHERE 
				RNUM BETWEEN ((#{pageIndex}-1) * #{pageCount}) + 1 AND ((#{pageIndex}-1) * #{pageCount}) + #{pageCount}
	</select>
	
	<select id="selectOneForCustVoice"  parameterType="CustVoiceVO" resultMap="CustVoiceVO">
		SELECT
			t1.CUST_VOICE_SEQ
			,t1.BLD_INFO_SEQ
			,t1.CUST_TITLE
			,t1.CUST_CATE
			,(SELECT CODE_NAME FROM HPCDTA.COMMCODE WHERE CODE_SEQ=t1.CUST_CATE) AS CUST_CATE_NAME
			,t1.CUST_FIELD
			,(SELECT CODE_NAME FROM HPCDTA.COMMCODE WHERE CODE_SEQ=t1.CUST_FIELD) AS CUST_FIELD_NAME
			,t1.CUST_NAME
			,DAMO.SCPDECB64('SCPKHPNO', t1.CUST_PHONE) AS CUST_PHONE
			,DAMO.SCPDECB64('SCPKMAIL', t1.CUST_EMAIL) AS CUST_EMAIL
			,t1.CONTENTS
			,t1.CUST_PW
			,t1.REG_DATE
			,TO_CHAR(t1.REG_DATE,'YYYYMMDDHH24MISS') AS STR_REG_DATE
			,t1.HIT_COUNT
			,t1.IS_QR
			,t1.IS_REPLY
			,t1.IS_TOLK
			,t1.IS_USE
			,t2.BLD_NAME			
			,t2.BLD_ZONE AS BLD_ZONE
            ,t2.BLD_DIVISION AS BLD_DIVISION						
		FROM HPCDTA.CUST_VOICE t1
		LEFT OUTER JOIN HPCDTA.BLD_INFO t2 ON t1.BLD_INFO_SEQ = t2.BLD_INFO_SEQ		
		WHERE t1.CUST_VOICE_SEQ = #{custVoiceSeq}
	</select>
	
	<select id="selectOneForCustVoiceFile"  parameterType="CustVoiceFileVO" resultMap="CustVoiceFileVO">
		SELECT
			CUST_VOICE_FILE_SEQ
			,CUST_VOICE_TYPE
			,CUST_VOICE_SEQ
			,FILE_TYPE
			,FILE_ORGNM
			,FILE_SAVENM
			,FILE_PATH
			,FILE_SIZE
			,FILE_FORM_NAME					
		FROM HPCDTA.CUST_VOICE_FILE				
		WHERE CUST_VOICE_TYPE = #{custVoiceType}
			AND CUST_VOICE_SEQ = #{custVoiceSeq}
	</select>
	
	
	<insert id="insertForCustVoiceReply" parameterType="CustVoiceReplyVO" useGeneratedKeys="true" keyProperty="CUST_VOICE_REPLY_SEQ">
     	<selectKey keyProperty="custVoiceReplySeq" resultType="int" order="BEFORE">			
			SELECT NEXTVAL FOR HPCDTA.CUST_VOICE_REPLY_T_SEQ FROM SYSIBM.SYSDUMMY1
		</selectKey>
         INSERT INTO 
         	HPCDTA.CUST_VOICE_REPLY (
				CUST_VOICE_REPLY_SEQ
				,CUST_VOICE_SEQ
				,ADM_ID
				,REPLY_TYPE
				,REPLY_CONTENTS
				,REG_DATE
         ) VALUES (
            #{custVoiceReplySeq}            
			,#{custVoiceSeq,jdbcType=INTEGER}
			,#{admID,jdbcType=VARCHAR}								
			,#{replyType,jdbcType=VARCHAR}
			,#{replyContents,jdbcType=VARCHAR}
			,CURRENT TIMESTAMP
         ) 
    </insert>
    
    <update id="updateForCustVoiceHitCount" parameterType="CustVoiceVO">
		UPDATE HPCDTA.CUST_VOICE SET
			HIT_COUNT=HIT_COUNT+1			
		WHERE CUST_VOICE_SEQ = #{custVoiceSeq,jdbcType=INTEGER}
    </update>
    
    <update id="updateOneForCustVoiceReplyFlag" parameterType="CustVoiceVO">
		UPDATE HPCDTA.CUST_VOICE SET
			IS_REPLY='Y'
			,IS_ALERT='Y'
		WHERE CUST_VOICE_SEQ = #{custVoiceSeq,jdbcType=INTEGER}
    </update>
    
    <update id="updateOneForCustVoiceTalkTalkFlag" parameterType="CustVoiceVO">
		UPDATE HPCDTA.CUST_VOICE SET
			IS_TOLK='Y'
		WHERE CUST_VOICE_SEQ = #{custVoiceSeq,jdbcType=INTEGER}
    </update>
    
    <update id="updateForCustVoiceIsUse" parameterType="CustVoiceVO">
		UPDATE HPCDTA.CUST_VOICE SET
			IS_USE=#{isUse,jdbcType=VARCHAR}
		WHERE CUST_VOICE_SEQ = #{custVoiceSeq,jdbcType=INTEGER}
    </update>    

	<update id="updateForCustVoiceIsAlert" parameterType="CustVoiceVO">
		UPDATE HPCDTA.CUST_VOICE SET
			IS_ALERT='Y'
		WHERE BLD_INFO_SEQ = #{bldInfoSeq,jdbcType=INTEGER}
    </update>
    
    <select id="selectOneForCustVoiceReply"  parameterType="CustVoiceReplyVO" resultMap="CustVoiceReplyVO">
		SELECT
			t1.CUST_VOICE_REPLY_SEQ
			,t1.CUST_VOICE_SEQ
			,t1.ADM_ID
			,t1.REPLY_TYPE
			,t1.REPLY_CONTENTS
			,t1.REG_DATE
			,t2.ADM_NAME
			,t2.DEPARTMENT_NAME					
		FROM HPCDTA.CUST_VOICE_REPLY t1		 
		LEFT OUTER JOIN HPCDTA.ADM_MEMBER t2 ON t1.ADM_ID=t2.ADM_ID		
		WHERE t1.CUST_VOICE_SEQ = #{custVoiceSeq}
	</select>
    
	<update id="updateForCustVoiceReply" parameterType="CustVoiceReplyVO">
		UPDATE HPCDTA.CUST_VOICE_REPLY SET
			REPLY_TYPE=#{replyType,jdbcType=VARCHAR}
			,REPLY_CONTENTS=#{replyContents,jdbcType=VARCHAR}			
		WHERE CUST_VOICE_SEQ = #{custVoiceSeq,jdbcType=INTEGER}
    </update>
    
    <delete id="deleteCustVoiceFile" parameterType="CustVoiceFileVO">     	
		DELETE FROM HPCDTA.CUST_VOICE_FILE WHERE CUST_VOICE_TYPE = #{custVoiceType,jdbcType=VARCHAR} AND CUST_VOICE_SEQ = #{custVoiceSeq,jdbcType=INTEGER}
    </delete>
    
    <update id="updateForCustVoiceManager" parameterType="CustVoiceVO">
		UPDATE HPCDTA.CUST_VOICE SET
			BLD_INFO_SEQ=#{bldInfoSeq,jdbcType=INTEGER}					
		WHERE CUST_VOICE_SEQ = #{custVoiceSeq,jdbcType=INTEGER}
    </update>
</mapper>